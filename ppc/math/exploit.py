from socket import socket, AF_INET, SOCK_STREAM
from itertools import permutations
import sys

# Server connection wrapper
class Connection:
    def __init__(self, ip, port):
        self._sock = socket(AF_INET, SOCK_STREAM)
        self._sock.connect((ip, port))
  
    def read(self, length = 1024):
        return self._sock.recv(length).decode()
  
    def write(self, data):
        self._sock.send(data.encode())
  
    def close(self):
        self._sock.close()

conn = Connection("ppc.upmlctf.ru", 5006)

while True:
    # read line
    data = conn.read()
    
    # if flag, quit
    if "uctf" in data:
        print(data)
        break
    
    # get last line
    data = data.split('\n')
    while not data[-1].strip():
        data.pop()
    
    # split to words
    eq = data[-1].split()
    # stack for evaluation
    stack = []
    
    # print for debug purposes
    print(eq)
    
    # parse items
    for item in eq:
        if item == '+':
            stack.append(stack.pop() + stack.pop())
        elif item == '*':
            stack.append(stack.pop() * stack.pop())
        else:
            stack.append(int(item))
    
    # send answer
    conn.write(str(stack[-1]) + '\n')
    
conn.close()
